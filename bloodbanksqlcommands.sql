-- 1. PERSON Table
CREATE TABLE PERSON (
    PERSON_ID SERIAL PRIMARY KEY,
    AADHAAR_NUMBER VARCHAR(12) NOT NULL UNIQUE,
    NAME VARCHAR(100) NOT NULL,
    DATE_OF_BIRTH DATE NOT NULL,
    AGE INT NOT NULL,
    GENDER CHAR(1) CHECK (GENDER IN ('M', 'F', 'O')),
    BLOOD_GROUP VARCHAR(3) CHECK (BLOOD_GROUP IN ('A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-')),
    D_NO VARCHAR(10),
    STREET_NAME VARCHAR(100),
    STREET_NO VARCHAR(10),
    APT_NUMBER VARCHAR(10),
    CITY VARCHAR(50),
    STATE VARCHAR(50)
);
select * from person

delete from person 
-- 2. CONTACT_INFO Table
CREATE TABLE CONTACT_INFO (
    PERSON_ID INT NOT NULL,
    CONTACT VARCHAR(15) NOT NULL,
    PRIMARY KEY (PERSON_ID, CONTACT),
    FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID) ON DELETE CASCADE
);
select * from contact_info;
-- 3. DONOR Table
CREATE TABLE DONOR (
    DONOR_ID SERIAL PRIMARY KEY,
    PERSON_ID INT NOT NULL,
    DONATION_DATE DATE NOT NULL,
    TAKING_QUANTITY NUMERIC(10, 2) NOT NULL,
    FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID) ON DELETE CASCADE
);
select STORAGE_QUANTITY
from storage 
where BRANCH_ID=1 and BLOOD_GROUP='O-'

select * from storage;
INSERT INTO STORAGE (BRANCH_ID, BLOOD_GROUP, STORAGE_QUANTITY) VALUES
(1, 'A+', 55.00),
(1, 'O-', 20.00),
(2, 'B+', 50.00),
(2, 'AB-', 15.00),
(3, 'O+', 60.00),
(3, 'A-', 25.00);


ALTER TABLE DONOR
    ALTER COLUMN TAKING_QUANTITY SET DEFAULT 350,
    ALTER COLUMN TAKING_QUANTITY SET NOT NULL;
select * from donor
delete from donor

-- 4. RECIPIENT Table
CREATE TABLE RECIPIENT (
    RECIPIENT_ID SERIAL PRIMARY KEY,
    PERSON_ID INT NOT NULL,
    RECEIVING_QUANTITY NUMERIC(10, 2) NOT NULL,
    RECEIVED_DATE DATE NOT NULL,
    FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID) ON DELETE CASCADE
);
select * from recipient
delete from recipien
-- 5. BLOOD_BANK_BRANCH Table
CREATE TABLE BLOOD_BANK_BRANCH (
    BRANCH_ID SERIAL PRIMARY KEY,
    LOCATION VARCHAR(100) NOT NULL,
    INAUGURATION_DATE DATE NOT NULL
);
INSERT INTO BLOOD_BANK_BRANCH (LOCATION, INAUGURATION_DATE) VALUES
('New Delhi', '2023-01-15'),
('Mumbai', '2024-03-10'),
('Chennai', '2023-06-25'),
('Kolkata', '2023-09-12'),
('Bangalore', '2024-02-20'),
('Hyderabad', '2023-11-05');
select * from BLOOD_BANK_BRANCH

-- 6. STORAGE Table
CREATE TABLE STORAGE (
    BRANCH_ID INT NOT NULL,
    BLOOD_GROUP VARCHAR(3) NOT NULL CHECK (BLOOD_GROUP IN ('A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-')),
    STORAGE_QUANTITY NUMERIC(10, 2) NOT NULL,
    PRIMARY KEY (BRANCH_ID, BLOOD_GROUP),
    FOREIGN KEY (BRANCH_ID) REFERENCES BLOOD_BANK_BRANCH (BRANCH_ID) ON DELETE CASCADE
);
ALTER TABLE STORAGE
    ADD CONSTRAINT chk_storage_quantity_rare
    CHECK (
        (BLOOD_GROUP IN ('A-', 'B-', 'O-', 'AB+', 'AB-') AND STORAGE_QUANTITY <= 30) OR
        (BLOOD_GROUP IN ('A+', 'B+', 'O+') AND STORAGE_QUANTITY BETWEEN 50 AND 60)
    );

select * from storage

-- 7. DONATES Table
CREATE TABLE DONATES (
    DONOR_ID INT NOT NULL,
    BRANCH_ID INT NOT NULL,
    PRIMARY KEY (DONOR_ID, BRANCH_ID),
    FOREIGN KEY (DONOR_ID) REFERENCES DONOR (DONOR_ID) ON DELETE CASCADE,
    FOREIGN KEY (BRANCH_ID) REFERENCES BLOOD_BANK_BRANCH (BRANCH_ID) ON DELETE CASCADE
);
select * from Donates

-- 8. RECEIVES Table
CREATE TABLE RECEIVES (
    RECIPIENT_ID INT NOT NULL,
    BRANCH_ID INT NOT NULL,
    PRIMARY KEY (RECIPIENT_ID, BRANCH_ID),
    FOREIGN KEY (RECIPIENT_ID) REFERENCES RECIPIENT (RECIPIENT_ID) ON DELETE CASCADE,
    FOREIGN KEY (BRANCH_ID) REFERENCES BLOOD_BANK_BRANCH (BRANCH_ID) ON DELETE CASCADE
);

select * from receives